a<-createDataPartition(sub_data,list=FALSE)
a
a<-createDataPartition(sub_data,2,list=FALSE)
a
ncol(sub_data)
nrow(sub_data)
ncol(fattyAcids)
nrow(fattyAcids)
createDataPartition(oilType)
createDataPartition(oilType,2)
str(oilType)
createDataPartition(fattyAcids,2)
part<-createDataPartition(sub_data$default,2,list=FALSE)
part
part<-createFolds(sub_data$default,2,list=FALSE)
part
part<-createFolds(sub_data$default,2)
part
part<-createFolds(sub_data$default,2,list=FALSE)
part
part<-createDataPartition(sub_data$default,1,list=FALSE)
part
train_ind<-createDataPartition(sub_data$default,p-0.7,list=FALSE)
train_ind<-createDataPartition(sub_data$default,p=0.7,list=FALSE)
train_ind
train_ind<-createDataPartition(sub_data$default,p=0.7,list=FALSE)
train_set<-(1:500 %in% train_ind)
train_set
train_ind<-createDataPartition(sub_data$default,p=0.7,list=FALSE)
train_set<-(1:500 %in% train_ind)
add_column(sub_data,train_set)
sub_data%>%add_rownames(var=ID)
sub_data%>%rownames_to_column(var=ID)
sub_data%>%rownames_to_column(var='ID')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(train)
View(test)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
train<-sample_frac(sub_data,0.7)
test<-anti_join(sub_data,train,by="ID")
train<-select(train,-ID)
test<-select(train,-ID)
test<-select(test,-ID)
?train
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(DT)
require(PoEdata)
require(kableExtra)
require(gridExtra)
require(ggmosaic)
require(ggthemes)
set.seed(1)
Credit<-readRDS('Credit.rds')%>%sample_n(100)
g<-ggplot(Credit,aes(x=LIMIT_BAL,y=AGE,col=default))+geom_point()+scale_color_colorblind()
g
g+geom_point(aes(x=350000,50),color='#339966',shape=4,size=10)
g+geom_point(aes(x=50000,45),color='#339966',shape=4,size=10)
g+geom_point(aes(x=350000,50),color='#339966',shape=4,size=10)
g+geom_point(aes(x=350000,50),color='#339966',shape=4,size=10)+geom_point(aes(x=350000,50),color='#339966',shape=1,size=45)
g+geom_point(aes(x=50000,45),color='#339966',shape=4,size=10)
g+geom_point(aes(x=50000,45),color='#339966',shape=4,size=10)+geom_point(aes(x=50000,45),color='#339966',shape=1,size=25)
g+geom_point(aes(x=350000,50),color='#339966',shape=4,size=10)+geom_point(aes(x=350000,50),color='#339966',shape=1,size=110)
g+geom_point(aes(x=50000,45),color='#339966',shape=4,size=10)+geom_point(aes(x=50000,45),color='#339966',shape=1,size=45)
grid<-Credit[,c(2,6)]
colnames(grid)<-c('Limit','Age')
grid%>%
as_tibble()%>%
add_column(Class=as.factor(pull(Credit,25)))%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point()+scale_color_colorblind()
library(class)
gx1<-seq(10000,500000, by=10000)
gx2<-seq(20.5,60, by=0.5)
grid<-expand.grid(gx1,gx2)
colnames(grid)<-c('Limit','Age')
#grid<-cbind(grid,rbinom(nrow(grid),1,0.5))
select(Credit,LIMIT_BAL,AGE)%>%scale->tr
ts<-scale(grid,center = attr(tr,"scaled:center") ,scale = attr(tr,"scaled:scale") )
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 1)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 3)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 11)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 17)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 3)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
set.seed(2)
Credit2<-readRDS('Credit.rds')%>%sample_n(100)
select(Credit2,LIMIT_BAL,AGE)%>%scale->tr2
ts2<-scale(grid,center = attr(tr2,"scaled:center") ,scale = attr(tr2,"scaled:scale") )
knn(tr2, ts2,cl = as.factor(pull(Credit2,25)),k = 3)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr, ts,cl = as.factor(pull(Credit,25)),k = 11)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
knn(tr2, ts2,cl = as.factor(pull(Credit2,25)),k = 11)->out
grid%>%
as_tibble%>%
add_column(Class=out)%>%
ggplot(aes(x=Limit,y=Age,col=Class))+geom_point(size=1)+scale_color_colorblind()
load('knnexample.RData')
train_x_std<-scale(train_x)
mean_train_x<-attr(train_x_std,"scaled:center")
std_train_x<-attr(train_x_std,"scaled:scale")
test_x_std<-scale(test_x,
center = mean_train_x,
scale = std_train_x)
train(train_x_std,
train_y,method='knn',k=1)->yhat_k1
install.packages("e1071")
train(train_x_std,
train_y,method='knn',k=1)->yhat_k1
train(train_x_std,
train_y,method='knn')->yhat_k1
yhat_k1
yhat_k1$results
yhat_k1$k
train_y,method='knn',k=1)->yhat_k1
data()
data("Sacramento")
Sacramento
Sacramento%>%colnames()
data(cars)
cars
cars%>%colnames()
library(e1071)
data(cars)
data()
setwd("~/Documents/Teaching/DataVizA2019/Tutorials/08PredictiveAnalytics")
read_delim('/tmp/mozilla_anastasios0/wine.data')->a
read_delim('/tmp/mozilla_anastasios0/wine.data',delim = ',')->a
a
View(a)
read_delim('/tmp/mozilla_anastasios0/wine.data',delim = ',',col_names = c('Alcohol',
'Malic',
'Ash',
'Alcalinity',
'Magnesium',
'TotalPhenols',
'Flavanoids',
'NonflavanoidPhenols',
'Proanthocyanins',
'Color',
'Hue',
'OD280/OD315',
'Proline') )->a
read_delim('/tmp/mozilla_anastasios0/wine.data',delim = ',',col_names = c('Rating,'Alcohol',
'Malic',
'Ash',
'Alcalinity',
'Magnesium',
'TotalPhenols',
'Flavanoids',
'NonflavanoidPhenols',
'Proanthocyanins',
'Color',
'Hue',
'OD280/OD315',
'Proline') )->a
read_delim('/tmp/mozilla_anastasios0/wine.data',delim = ',',col_names = c('Rating','Alcohol',
'Malic',
'Ash',
'Alcalinity',
'Magnesium',
'TotalPhenols',
'Flavanoids',
'NonflavanoidPhenols',
'Proanthocyanins',
'Color',
'Hue',
'OD280/OD315',
'Proline') )->a
View(a)
forcats::fct_relabel(a$Rating, c('Average', 'Good', 'Excellent'))
?fct_relabel
factor(a$Rating,labels = c('Poor','Good','Excellent'))
mutate(a,factor(a$Rating,labels = c('Poor','Good','Excellent')))->b
b
str(b)
mutate(a,factor(a$Rating,levels= c('Poor','Good','Excellent'),labels = c('Poor','Good','Excellent')))->b
b
str(b)
mutate(a,Rating=factor(Rating,levels= c('Poor','Good','Excellent'),labels = c('Poor','Good','Excellent')))->b
b
mutate(a,Rating=factor(Rating,labels = c('Poor','Good','Excellent')))->b
str(b)
b$Rating
b%>%rownames_to_column(var='ID')%>%sample_frac(0.7)->train
View(train)
b%>%mutate_if(is.numeric(),scale())%>%rownames_to_column(var='ID')%>%sample_frac(0.7)->train
?mutate_if
b%>%mutate_if(is.numeric,scale%>%rownames_to_column(var='ID')%>%sample_frac(0.7)->train
>
ewfw45
)
b%>%mutate_if(is.numeric,scale)%>%rownames_to_column(var='ID')%>%sample_frac(0.7)->train
View(train)
b%>%mutate_if(is.numeric,scale)%>%rownames_to_column(var='ID')->int
int%>%sample_frac(0.7)->train
anti_join(int,b,by="ID")->test
anti_join(int,train,by="ID")->test
nrow(test)
nrow(train)
nrow(int)
test%>%select(-ID)%>%saveRDS('NewWines.rds')
train%>%select(-ID)%>%saveRDS('ExistingWines.rds')
rm(list=ls())
NewWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/08PredictiveAnalytics/NewWines.rds")
View(NewWines)
View(ExistingWines)
ExistingWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/08PredictiveAnalytics/ExistingWines.rds")
View(ExistingWines)
readRDS('NewWines.rds')%>%pull(Rating)%>%saveRDS('Test_y.rds')
readRDS('Test_y.rds')
readRDS('NewWines.rds')%>%select(-Rating)%>%saveRDS('NewWines.rds')
readRDS('NewWines.rds')%>%View
134+37+29
37+258
180+295+134
200+283+136
ExistingWines$Rating
ExistingWines$Rating->a
a
sample(a,125,replace = TRUE)
sample(a,125,replace = TRUE)->b
table(a,b)
a
c(a[1:100],sample(a,25,replace = TRUE))->b
table(a,b)
1+4+1+4+2+4+38+46+25
16/125
readRDS('Test_y.rds')->a
a
?fct_relabel()
levels(a)
levels(a)<-c('Austrlia', 'Europe', 'Japan')
a
saveRDS(a,'Test_y.rds')
readRDS('ExistingWines.rds')->a
rename(a,BestMarket=Rating)->b
View(b)
labels(b$BestMarket)<-c('Australia','Europe','Japan')
label(b$BestMarket)<-c('Australia','Europe','Japan')
levels(b$BestMarket)<-c('Australia','Europe','Japan')
saveRDS(b,'ExistingWines.rds')
readRDS('Test_y.rds')->a
a
levels(a)<-c('Australia', 'Europe', 'Japan')
saveRDS(a,'Test_y.rds')
rm(list=ls())
readRDS('ExistingWines.rds')
readRDS('NewWines.rds')
readRDS('NewWines.rds')%>%View
readRDS('ExistingWines.rds')%>%View
readRDS('Test_y.rds')
knitr::opts_chunk$set(echo = TRUE)
require(kableExtra)
require(tibble)
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Precitive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Precitive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
ExistingWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/08PredictiveAnalytics/ExistingWines.rds")
rmarkdown::render('Predictive.Rmd',output_file='PredictiveSols.pdf')
if(sols) "*The specificity is the proportion of observations that are truly negative that are classified as negative.*"
rmarkdown::render('Predictive.Rmd',output_file='Predictive.pdf')
Credit_sub <- readRDS("~/Documents/Teaching/DataVizA2019/Lectures/08PredictiveAnalytics/Credit_sub.rds")
rm(list=ls())
ExistingWines
ExistingWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/09kNN/ExistingWines.rds")
ExistingWines%>%head
knitr::opts_chunk$set(echo = TRUE)
require(kableExtra)
require(tibble)
yhat_k1<-knn(train_x,test_x,train_y,k=1)
train_x<-select(ExistingWines,-BestMarket)
train_y<-select(ExistingWines,BestMarket)
test_x<-readRDS('NewWines.rds')
yhat_k1<-knn(train_x,test_x,train_y,k=1)
?knn
#rmarkdown::render('kNN.Rmd',output_file='kNN.pdf')
#rmarkdown::render('kNN.Rmd',output_file='kNNSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'DataVizA Tutorial: k Nearest Neighbour Classification: Solutions','DataVizA Tutorial: k Nearest Neighbour Classification')
#Use tidyverse
library(dplyr)
library(class)
#Load in data
ExistingWines<-readRDS('ExistingWines.rds')
train_x<-select(ExistingWines,-BestMarket)
train_y<-pull(ExistingWines,BestMarket)
test_x<-readRDS('NewWines.rds')
yhat_k1<-knn(train_x,test_x,train_y,k=1)
yhat_k1
yhat_k1<-knn(train_x,test_x,train_y,k=11)
yhat_k1
readRDS('Test_y.rds')
test_x%>%sample_n(53)
sample(1:53,53,replace=F)->ind
ind
test_x[ind,]%>%View
View(train_x)
test_x[ind,]%>%saveRDS('NewWines.rds')
readRDS('Test_y.rds')->a
a
a[ind]%>%saveRDS('Test_y.rds')
readRDS('Test_y.rds')
readRDS('NewWines.rds')
test_x[ind,]
readRDS('NewWines.rds')
yhat_k1
readRDS('Test_y.rds')
ind
test_x[ind,]%>%View
test_x%>%View
rm(list=ls())
yhat_k21
#rmarkdown::render('kNN.Rmd',output_file='kNN.pdf')
#rmarkdown::render('kNN.Rmd',output_file='kNNSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'DataVizA Tutorial: k Nearest Neighbour Classification: Solutions','DataVizA Tutorial: k Nearest Neighbour Classification')
knitr::opts_chunk$set(echo = TRUE)
require(kableExtra)
require(tibble)
#Use tidyverse
library(dplyr)
library(class)
#Load in data
ExistingWines<-readRDS('ExistingWines.rds')
train_x<-select(ExistingWines,-BestMarket)
train_y<-pull(ExistingWines,BestMarket)
test_x<-readRDS('NewWines.rds')
yhat_k1<-knn(train_x,test_x,train_y,k=1)
#The first five predictions can be checked using the head function
head(yhat_k1,5)
yhat_k21<-knn(train_x,test_x,train_y,k=21)
head(yhat_k21,5)
head(yhat_k21,10)
yhat_k21<-knn(train_x,test_x,train_y,k=1)
head(yhat_k21,10)
yhat_k1
test_x
test_x[ind,]
ind<-sample(1:53,53,replace = F)
ind
test_x[ind,]
runif(125)>0.7
ind<-ifelse(runif(125)<0.7,"Training Sample","Test Sample")
ind
#rmarkdown::render('kNN.Rmd',output_file='kNN.pdf')
#rmarkdown::render('kNN.Rmd',output_file='kNNSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'DataVizA Tutorial: k Nearest Neighbour Classification: Solutions','DataVizA Tutorial: k Nearest Neighbour Classification')
knitr::opts_chunk$set(echo = TRUE)
require(kableExtra)
require(tibble)
#Use tidyverse
library(dplyr)
library(class)
#Load in data
ExistingWines<-readRDS('ExistingWines.rds')
old_x<-select(ExistingWines,-BestMarket)
old_y<-pull(ExistingWines,BestMarket)
new_x<-readRDS('NewWines.rds')
yhat_k1<-knn(old_x,new_x,old_y,k=1)
#The first five predictions can be checked using the head function
head(yhat_k1,5)
yhat_k11<-knn(old_x,new_x,old_y,k=11)
head(yhat_k11,5)
#Create an indicator that determines whether it is training or test sample.
ind<-ifelse(runif(125)<0.7,"Training Sample","Test Sample")
train_y<-old_y[ind=="Training Sample"]
test_y<-old_y[ind=="Test Sample"]
train_x<-old_x[ind=="Training Sample",]
test_x<-old_x[ind=="Test Sample",]
85/125
#rmarkdown::render('kNN.Rmd',output_file='kNN.pdf')
#rmarkdown::render('kNN.Rmd',output_file='kNNSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'DataVizA Tutorial: k Nearest Neighbour Classification: Solutions','DataVizA Tutorial: k Nearest Neighbour Classification')
knitr::opts_chunk$set(echo = TRUE)
require(kableExtra)
require(tibble)
#Use tidyverse
library(dplyr)
library(class)
#Load in data
ExistingWines<-readRDS('ExistingWines.rds')
old_x<-select(ExistingWines,-BestMarket)
old_y<-pull(ExistingWines,BestMarket)
new_x<-readRDS('NewWines.rds')
yhat_k1<-knn(old_x,new_x,old_y,k=1)
#The first five predictions can be checked using the head function
head(yhat_k1,5)
yhat_k11<-knn(old_x,new_x,old_y,k=11)
head(yhat_k11,5)
#Create an indicator that determines whether it is training or test sample.
ind<-ifelse(runif(125)<0.7,"Training Sample","Test Sample")
train_y<-old_y[ind=="Training Sample"]
test_y<-old_y[ind=="Test Sample"]
train_x<-old_x[ind=="Training Sample",]
test_x<-old_x[ind=="Test Sample",]
yhat_k1<-knn(train_x,test_x,train_y,k=1)
mean(yhat_k1!=test_y)
yhat_k11<-knn(train_x,test_x,train_y,k=11)
mean(yhat_k11!=test_y)
yhat_k1
train_y
test_y
yhat_k1
attr(yhat_k11,"prob")
yhat_k11<-knn(old_x,new_x,old_y,k=11,prob = T)
head(attr(yhat_k11,"prob"),5)
attr(yhat_k11,"prob")
yhat_k1
#Use tidyverse
library(dplyr)
library(class)
#Load in data
ExistingWines<-readRDS('ExistingWines.rds')
#Split x and y variables
old_x<-select(ExistingWines,-BestMarket)
old_y<-pull(ExistingWines,BestMarket)
#Load in New Wine Data
new_x<-readRDS('NewWines.rds')
yhat_k1<-knn(old_x,new_x,old_y,k=1)
yhat_k1
readRDS('NewWines.rds')%>%sample_n(53,replace = F)
readRDS('NewWines.rds')
rm(list=ls())
setwd("~/Documents/Teaching/DataVizA2019/Tutorials/09kNN")
rm(list=ls())
library(tidyverse)
read_csv('wine.data')->w
w
read_csv('wine.data',col_names = header)->w
source('~/.active-rstudio-document', echo=TRUE)
w
mutate(BestMarket=factor(BestMarket,levels = c('Australia','Europe','Japan')))
mutate(w,BestMarket=factor(BestMarket,levels = c('Australia','Europe','Japan')))
mutate(w,BestMarket=as.factor(BestMarket,levels = c('Australia','Europe','Japan')))
mutate(w,BestMarket=factor(BestMarket,labels = c('Australia','Europe','Japan')))
add_rownames(w,var = 'ID')->wwn
rownames_to_column(w,var = 'ID')->wwn
wwn
old<-sample_frac(wwn,size = 0.7)
ol
old
new<-anti_join(wwn,by="ID")
old<-sample_frac(wwn,size = 0.7)
new<-anti_join(wwn,old,by="ID")
View(new)
View(old)
source('~/.active-rstudio-document', echo=TRUE)
View(newr)
select(old,-ID)
source('~/.active-rstudio-document', echo=TRUE)
pull(new,BestMarket)%>%saveRDS('Test_y.rds')
source('~/.active-rstudio-document', echo=TRUE)
old<-sample_frac(wwn,size = 0.7)
source('~/.active-rstudio-document', echo=TRUE)
NewWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/09kNN/NewWines.rds")
ExistingWines <- readRDS("~/Documents/Teaching/DataVizA2019/Tutorials/09kNN/ExistingWines.rds")
ExistingWines
source('~/.active-rstudio-document', echo=TRUE)
read_csv('wine.data',col_names = header)%>%
mutate(w,BestMarket=factor(BestMarket,labels = c('Australia','Europe','Japan')))->w
source('~/.active-rstudio-document', echo=TRUE)
#The first ten predictions can be checked using the tail function
tail(yhat_k1,10)
#Create an indicator that determines whether it is training or test sample.
ind<-ifelse(runif(125)<0.7,"Training Sample","Test Sample")
train_y<-old_y[ind=="Training Sample"]
rmarkdown::render('kNN.Rmd',output_file='kNNSols.pdf')
rmarkdown::render('kNN.Rmd',output_file='kNN.pdf')
